name: App CD

on: # specify the build to trigger the automated ci/cd
    push:
        branches:
            - "main"
jobs:

  flake8-lint:
    runs-on: ubuntu-latest
    name: Lint
    steps:
      - name: Check out source repository
        uses: actions/checkout@v3
      - name: Set up Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
      - name: flake8 Lint
        uses: py-actions/flake8@v2
        with:
          ignore: "F401"
          max-line-length: "120"
        
  build:
        name: Build Docker image
        runs-on: ubuntu-latest # specify the build machine
        needs: [flake8-lint]
        if: ${{ needs.flake8-lint.result == 'success' }}
          
        steps:
            - # checkout to the repository on the build machine
                name: Checkout
                uses: actions/checkout@v3
            - # login to Docker Hub using the secrets provided
                name: Login to Docker Hub
                uses: docker/login-action@v2
                with:
                  username: ${{secrets.DOCKERHUB_USERNAME }} 
                  password: ${{secrets.DOCKERHUB_TOKEN }}
            - # create a build kit builder instance
                name: Set up Docker Buildx
                uses: docker/setup-buildx-action@v2
            - # build the container image and push it to Docker \
                # Hub with the name clockbox.
                name: Build and push
                uses: docker/build-push-action@v4
                with:
                  context: .
                  push: true
                  tags: laurasili/flask:latest
  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    if: ${{ needs.build.result == 'success' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up SSH key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_HOST_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_HOST }} >> ~/.ssh/known_hosts
      - name: Create license file from GitHub secret
        run: |
          echo "${{ secrets.NEW_RELIC_LICENSE_KEY }}" > newrelic-infra.yml
          echo "License file created."
      - name: Copy files via SCP
        run: |
          find . -maxdepth 1 ! -name '.*' -exec scp -r {} ubuntu@${{ secrets.EC2_HOST }}:/home/ubuntu/ \;

      - name: SSH and Deploy to Server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_HOST_PRIVATE_KEY }}
          port: 22
          script: |
            echo "${{ secrets.DOCKERHUB_TOKEN }}" | sudo docker login ${{ env.REGISTRY }} -u l.silinyte@gmail.com --password-stdin
            echo "--- Docker compose pull ---"
            sudo docker compose pull
            echo "--- Docker compose up ---"
            sudo docker compose up -d

    env:
      REGISTRY: docker.io

  check-flask:
    runs-on: ubuntu-latest
    needs: [deploy]
    if: ${{ needs.deploy.result == 'success' }}
    steps:
      - name: Check if site works and contains text "Todo List"
        run: |
          URL="http://${{ secrets.EC2_HOST }}:5000"

          echo "Checking URL: $URL"

          if curl -s "$URL" | grep -q "Todo List"; then
            echo "Found text 'Todo List' — success."
          else
            echo "Text 'Todo List' not found — failing the workflow."
            exit 1
          fi
